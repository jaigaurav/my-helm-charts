apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator
  labels:
    role: coordinator
    {{- include "app.labels" . | nindent 4 }}
  {{- if .Values.coordinator.deploymentAnnotations }}
  annotations:
    {{- toYaml .Values.coordinator.deploymentAnnotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.coordinator.replicas | default 1 }}
  selector:
    matchLabels:
      role: coordinator
      {{- include "app.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        role: coordinator
        {{- include "app.labels" . | nindent 8 }}
      annotations:
        {{- include "starburst.coordinator-checksums" . | nindent 8 }}
        {{- include "starburst.config-checksums" . | nindent 8 }}
      {{- if .Values.coordinator.podAnnotations }}
        {{- toYaml .Values.coordinator.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      # This has to be in sync as we can't kill coordinator earlier that workers.
      terminationGracePeriodSeconds: {{ .Values.worker.deploymentTerminationGracePeriodSeconds }}
      {{- include "app.imagePullSecretName" . | nindent 6 }}
      initContainers:
        - name: starburst-enterprise-init
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          {{- with .Values.coordinator.resources }}
          resources:
            {{- include "app.resources" . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: starburst-config
              mountPath: /work-dir
            - name: starburst-config-updated
              mountPath: /etc/starburst
          command:
            - starburst-conf-cli
            - generate
            - --values-yaml
            - /work-dir/values.yaml
            - --config-type
            - COORDINATOR
            - --starburst-config-dir
            - /etc/starburst
            - --ip
            - $(POD_IP)
            - --k8s-namespace
            - $(POD_NAMESPACE)
        {{- if .Values.coordinator.initContainers }}
        {{- include "starburst.process.container" ( dict "value" .Values.coordinator.initContainers "context" . ) | nindent 8 -}}
        {{- end }}
      containers:
        - name: coordinator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.coordinator.command }}
          command:
            {{- range .Values.coordinator.command }}
              - "{{ . }}"
            {{- end }}
          {{- end }}
          {{- if .Values.initFile }}
          command: [ "/bin/bash" ]
          args:
            - "/initFile"
            - "coordinator"
            {{- range .Values.extraArguments }}
            - "{{ . }}"
            {{- end}}
          {{- end }}
          startupProbe:
          {{- if .Values.startupProbe }}
          {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- else }}
          {{- include "starburst.startup.probe" . | nindent 12 }}
          {{- end }}
          readinessProbe:
          {{- if .Values.readinessProbe }}
          {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else }}
          {{- include "starburst.readiness.probe" . | nindent 12 }}
          {{- end }}
          livenessProbe:
          {{- if .Values.livenessProbe }}
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- else }}
          {{- include "starburst.liveness.probe" . | nindent 12 }}
          {{- end }}
          envFrom:
          {{- with .Values.coordinator.envFrom -}}
            {{- toYaml . | nindent 12 -}}
          {{- end -}}
          {{- include "helperFunction.secretEnv.coordinator" . | nindent 12 }}
          env:
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: {{ .Values.internal.ports.http.port }}
            - containerPort: {{ .Values.internal.ports.https.port }}
          volumeMounts:
            {{- if .Values.initFile }}
            - name: init-file
              mountPath: /initFile
              subPath: initFile
              readOnly: true
            {{- end }}
            {{- if .Values.extraSecret.name }}
            - name: extra-secret
              mountPath: /extra-secret/
              readOnly: true
            {{- end }}
            - name: starburst-config-updated
              mountPath: /etc/starburst
            {{- include "helperFunction.secretRef.volumesMounts.coordinator" . | nindent 12 -}}
            {{- if .Values.cache.enabled }}
            - name: cache-volume
              mountPath: /data/starburst/cache
            {{- end -}}
            {{- if .Values.prometheus.enabled }}
            - name: prometheus-volume
              mountPath: /etc/starburst/telemetry
            {{- end }}
            {{- include "app.volumeMounts" . | nindent 12 }}
          {{- with .Values.coordinator.resources }}
          resources:
            {{- include "app.resources" . | nindent 12 }}
          {{- end }}
          terminationMessagePolicy: FallbackToLogsOnError
        {{- if .Values.usageMetrics.enabled }}
        - name: usage-client
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              cpu: "0.5"
              memory: 512Mi          
            requests:
              cpu: "0.1"
              memory: 256Mi         
          command: ["java"]
          args:
            - "-Dusage-client.coordinator-uri=http://localhost:{{ .Values.internalTls | ternary .Values.internal.ports.https.port .Values.internal.ports.http.port }}"
            {{- if .Values.usageMetrics.usageClient.initialDelay }}
            - "-Dusage-client.initial-delay={{ .Values.usageMetrics.usageClient.initialDelay }}"
            {{- end }}
            {{- if .Values.usageMetrics.usageClient.interval }}
            - "-Dusage-client.interval={{ .Values.usageMetrics.usageClient.interval }}"
            {{- end }}
            - "-jar"
            - "/usr/local/bin/starburst-usage-client.jar"
          terminationMessagePolicy: FallbackToLogsOnError
        {{- end }}
        {{- if and .Values.worker.kedaScaler.enabled (not .Values.worker.kedaScaler.debugContainer) }}
        - name: keda-trino-scaler
          image: "{{ .Values.worker.kedaScaler.image.repository }}:{{ .Values.worker.kedaScaler.image.tag }}"
          imagePullPolicy: {{ .Values.worker.kedaScaler.image.pullPolicy }}
          resources:
            limits:
              cpu: "0.4"
              memory: 128Mi
            requests:
              cpu: "0.2"
              memory: 64Mi
          env:
            - name: SERVER_URL
              value: "0.0.0.0:{{ .Values.worker.kedaScaler.port }}"
            - name: JMX_METRICS_URL
              value: "http://127.0.0.1:{{ .Values.prometheus.agent.port }}/metrics"
          terminationMessagePolicy: FallbackToLogsOnError
        {{- end }}
        {{- if .Values.coordinator.sidecars }}
        {{- include "starburst.process.container" ( dict "value" .Values.coordinator.sidecars "context" . ) | nindent 8 -}}
        {{- end }}
      volumes:
        {{- if .Values.initFile }}
        - name: init-file
          secret:
            secretName: {{ template "app.init-file-secret.name" . }}
        {{- end }}
        {{- if .Values.extraSecret.name }}
        - name: extra-secret
          secret:
            secretName: "{{ .Values.extraSecret.name }}"
        {{- end }}
        - name: starburst-config
          projected:
            sources:
              - secret:
                  name: values-yaml-secret
              {{- if .Values.starburstPlatformLicense }}
              - secret:
                  name: {{ .Values.starburstPlatformLicense }}
              {{- end }}
        - name: starburst-config-updated
          emptyDir: {}
        {{- include "helperFunction.secretRef.volumes.coordinator" . | nindent 8 -}}
        {{- if .Values.cache.enabled }}
        - name: cache-volume
          {{- toYaml .Values.cache.volume | nindent 10 -}}
        {{- end -}}
        {{- if .Values.prometheus.enabled }}
        - name: prometheus-volume
          configMap:
            name: starburst-coordinator-p8s
        {{- end }}
        {{- include "app.volumes" . | nindent 8 }}
      {{- with .Values.coordinator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.coordinator.priorityClassName }}
      priorityClassName:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
